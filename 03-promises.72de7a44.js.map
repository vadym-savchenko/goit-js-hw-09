{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAChCC,EAAY,GAiChB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUC,UAEpBG,EAAO,CAAEK,SAAAT,EAAUC,S,GAEpBA,E,IAvCPN,EAAKe,iBAAiB,UAUtB,SAA0BC,GACxBA,EAAEC,iBAIF,IADA,IAAMC,EAAwBf,EAAxBG,MAAOa,EAAiBhB,EAAjBgB,KAAMC,EAAWjB,EAAXiB,OACVC,EAAI,EAAGA,GAAKD,EAAQC,GAAG,EAE9BjB,EADWiB,EACaH,GACrBI,MAAK,SAAAC,G,IAAGC,EAAQD,EAART,SAAUR,EAAKiB,EAALjB,MACjBR,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAANrB,EAAM,M,IAE9DsB,OAAM,SAAAL,G,IAAGM,EAAQN,EAART,SAAUR,EAAKiB,EAALjB,MAClBR,EAAA2B,OAAOK,QAAQ,sBAAqCH,OAAfE,EAAS,QAAYF,OAANrB,EAAM,M,IAE9DY,GAASC,EAGXH,EAAEe,cAAcC,O,IA1BlBhC,EAAKe,iBAAiB,SAEtB,SAA2BC,GACzBb,EAAUa,EAAEiB,OAAOC,MAAQC,OAAOnB,EAAEiB,OAAOG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst form = document.querySelector('.form');\nlet formInput = {};\nlet position = 0;\n\nform.addEventListener('submit', handleSubmitForm);\nform.addEventListener('input', handleInputValues);\n\nfunction handleInputValues(e) {\n  formInput[e.target.name] = Number(e.target.value);\n\n  // console.log(formInput);\n  // return formInput;\n}\n\nfunction handleSubmitForm(e) {\n  e.preventDefault();\n  // console.log(formInput);\n\n  let { delay, step, amount } = formInput;\n  for (let i = 1; i <= amount; i+=1) {\n    position = i;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$formInput","$ce04d3a99e08e73b$var$createPromise","position3","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","addEventListener","e","preventDefault","delay1","step","amount","i","then","param","position1","Notify","success","concat","catch","position2","failure","currentTarget","reset","target","name","Number","value"],"version":3,"file":"03-promises.72de7a44.js.map"}